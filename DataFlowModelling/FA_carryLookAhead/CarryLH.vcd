$date
	Thu Sep 09 13:34:49 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module carryLookAhead_tb $end
$var wire 4 ! SUM [3:0] $end
$var wire 1 " COUT $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % CIN $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 ( c1 $end
$var wire 1 ) c2 $end
$var wire 1 * c3 $end
$var wire 1 + c4 $end
$var wire 1 % cin $end
$var wire 1 " cout $end
$var wire 4 , sum [3:0] $end
$var wire 4 - p [3:0] $end
$var wire 4 . g [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 .
b111 -
b1000 ,
0+
1*
1)
1(
b100 '
b11 &
1%
b100 $
b11 #
0"
b1000 !
$end
#10
b101 $
b101 '
b10 #
b10 &
#20
0*
0)
b11 !
b11 ,
1"
1+
b0 -
b1001 .
b1001 $
b1001 '
b1001 #
b1001 &
#30
1*
b1010 !
b1010 ,
1(
1)
b101 -
b1010 .
b1111 $
b1111 '
b1010 #
b1010 &
#35
0(
b1001 !
b1001 ,
0%
#45
0*
b111 !
b111 ,
0)
0"
0+
b111 -
b0 .
b100 $
b100 '
b11 #
b11 &
#55
b101 $
b101 '
b10 #
b10 &
#65
b10 !
b10 ,
1(
1"
1+
b0 -
b1001 .
b1001 $
b1001 '
b1001 #
b1001 &
#75
1*
b1001 !
b1001 ,
0(
1)
b101 -
b1010 .
b1111 $
b1111 '
b1010 #
b1010 &
